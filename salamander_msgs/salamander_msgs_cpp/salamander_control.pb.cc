// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: salamander_control.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "salamander_control.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace salamander {
namespace msgs {

namespace {

const ::google::protobuf::Descriptor* SalamanderControl_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SalamanderControl_reflection_ = NULL;
const ::google::protobuf::Descriptor* ControlAnalysis_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ControlAnalysis_reflection_ = NULL;
const ::google::protobuf::Descriptor* JointConsumption_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  JointConsumption_reflection_ = NULL;
const ::google::protobuf::Descriptor* JointCommands_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  JointCommands_reflection_ = NULL;
const ::google::protobuf::Descriptor* JointTorques_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  JointTorques_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_salamander_5fcontrol_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_salamander_5fcontrol_2eproto() {
  protobuf_AddDesc_salamander_5fcontrol_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "salamander_control.proto");
  GOOGLE_CHECK(file != NULL);
  SalamanderControl_descriptor_ = file->message_type(0);
  static const int SalamanderControl_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SalamanderControl, cmds_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SalamanderControl, torques_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SalamanderControl, analysis_),
  };
  SalamanderControl_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SalamanderControl_descriptor_,
      SalamanderControl::default_instance_,
      SalamanderControl_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SalamanderControl, _has_bits_[0]),
      -1,
      -1,
      sizeof(SalamanderControl),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SalamanderControl, _internal_metadata_),
      -1);
  ControlAnalysis_descriptor_ = file->message_type(1);
  static const int ControlAnalysis_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ControlAnalysis, joints_consumption_),
  };
  ControlAnalysis_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ControlAnalysis_descriptor_,
      ControlAnalysis::default_instance_,
      ControlAnalysis_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ControlAnalysis, _has_bits_[0]),
      -1,
      -1,
      sizeof(ControlAnalysis),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ControlAnalysis, _internal_metadata_),
      -1);
  JointConsumption_descriptor_ = file->message_type(2);
  static const int JointConsumption_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JointConsumption, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JointConsumption, consumption_),
  };
  JointConsumption_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      JointConsumption_descriptor_,
      JointConsumption::default_instance_,
      JointConsumption_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JointConsumption, _has_bits_[0]),
      -1,
      -1,
      sizeof(JointConsumption),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JointConsumption, _internal_metadata_),
      -1);
  JointCommands_descriptor_ = file->message_type(3);
  static const int JointCommands_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JointCommands, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JointCommands, commands_),
  };
  JointCommands_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      JointCommands_descriptor_,
      JointCommands::default_instance_,
      JointCommands_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JointCommands, _has_bits_[0]),
      -1,
      -1,
      sizeof(JointCommands),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JointCommands, _internal_metadata_),
      -1);
  JointTorques_descriptor_ = file->message_type(4);
  static const int JointTorques_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JointTorques, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JointTorques, torque_),
  };
  JointTorques_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      JointTorques_descriptor_,
      JointTorques::default_instance_,
      JointTorques_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JointTorques, _has_bits_[0]),
      -1,
      -1,
      sizeof(JointTorques),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(JointTorques, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_salamander_5fcontrol_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SalamanderControl_descriptor_, &SalamanderControl::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ControlAnalysis_descriptor_, &ControlAnalysis::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      JointConsumption_descriptor_, &JointConsumption::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      JointCommands_descriptor_, &JointCommands::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      JointTorques_descriptor_, &JointTorques::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_salamander_5fcontrol_2eproto() {
  delete SalamanderControl::default_instance_;
  delete SalamanderControl_reflection_;
  delete ControlAnalysis::default_instance_;
  delete ControlAnalysis_reflection_;
  delete JointConsumption::default_instance_;
  delete JointConsumption_reflection_;
  delete JointCommands::default_instance_;
  delete JointCommands_reflection_;
  delete JointTorques::default_instance_;
  delete JointTorques_reflection_;
}

void protobuf_AddDesc_salamander_5fcontrol_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AddDesc_salamander_5fcontrol_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::salamander::msgs::protobuf_AddDesc_salamander_5fjoints_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\030salamander_control.proto\022\017salamander.m"
    "sgs\032\027salamander_joints.proto\"\245\001\n\021Salaman"
    "derControl\022,\n\004cmds\030\001 \003(\0132\036.salamander.ms"
    "gs.JointCommands\022.\n\007torques\030\002 \003(\0132\035.sala"
    "mander.msgs.JointTorques\0222\n\010analysis\030\003 \001"
    "(\0132 .salamander.msgs.ControlAnalysis\"P\n\017"
    "ControlAnalysis\022=\n\022joints_consumption\030\001 "
    "\003(\0132!.salamander.msgs.JointConsumption\"5"
    "\n\020JointConsumption\022\014\n\004name\030\001 \002(\t\022\023\n\013cons"
    "umption\030\002 \002(\001\"L\n\rJointCommands\022\014\n\004name\030\001"
    " \002(\t\022-\n\010commands\030\002 \003(\0132\033.salamander.msgs"
    ".JointState\"J\n\014JointTorques\022\014\n\004name\030\001 \002("
    "\t\022,\n\006torque\030\002 \003(\0132\034.salamander.msgs.Join"
    "tTorque", 527);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "salamander_control.proto", &protobuf_RegisterTypes);
  SalamanderControl::default_instance_ = new SalamanderControl();
  ControlAnalysis::default_instance_ = new ControlAnalysis();
  JointConsumption::default_instance_ = new JointConsumption();
  JointCommands::default_instance_ = new JointCommands();
  JointTorques::default_instance_ = new JointTorques();
  SalamanderControl::default_instance_->InitAsDefaultInstance();
  ControlAnalysis::default_instance_->InitAsDefaultInstance();
  JointConsumption::default_instance_->InitAsDefaultInstance();
  JointCommands::default_instance_->InitAsDefaultInstance();
  JointTorques::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_salamander_5fcontrol_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_salamander_5fcontrol_2eproto {
  StaticDescriptorInitializer_salamander_5fcontrol_2eproto() {
    protobuf_AddDesc_salamander_5fcontrol_2eproto();
  }
} static_descriptor_initializer_salamander_5fcontrol_2eproto_;

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SalamanderControl::kCmdsFieldNumber;
const int SalamanderControl::kTorquesFieldNumber;
const int SalamanderControl::kAnalysisFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SalamanderControl::SalamanderControl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:salamander.msgs.SalamanderControl)
}

void SalamanderControl::InitAsDefaultInstance() {
  analysis_ = const_cast< ::salamander::msgs::ControlAnalysis*>(&::salamander::msgs::ControlAnalysis::default_instance());
}

SalamanderControl::SalamanderControl(const SalamanderControl& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:salamander.msgs.SalamanderControl)
}

void SalamanderControl::SharedCtor() {
  _cached_size_ = 0;
  analysis_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

SalamanderControl::~SalamanderControl() {
  // @@protoc_insertion_point(destructor:salamander.msgs.SalamanderControl)
  SharedDtor();
}

void SalamanderControl::SharedDtor() {
  if (this != default_instance_) {
    delete analysis_;
  }
}

void SalamanderControl::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SalamanderControl::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SalamanderControl_descriptor_;
}

const SalamanderControl& SalamanderControl::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_salamander_5fcontrol_2eproto();
  return *default_instance_;
}

SalamanderControl* SalamanderControl::default_instance_ = NULL;

SalamanderControl* SalamanderControl::New(::google::protobuf::Arena* arena) const {
  SalamanderControl* n = new SalamanderControl;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SalamanderControl::Clear() {
// @@protoc_insertion_point(message_clear_start:salamander.msgs.SalamanderControl)
  if (has_analysis()) {
    if (analysis_ != NULL) analysis_->::salamander::msgs::ControlAnalysis::Clear();
  }
  cmds_.Clear();
  torques_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool SalamanderControl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:salamander.msgs.SalamanderControl)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .salamander.msgs.JointCommands cmds = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_cmds:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_cmds()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_cmds;
        if (input->ExpectTag(18)) goto parse_loop_torques;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .salamander.msgs.JointTorques torques = 2;
      case 2: {
        if (tag == 18) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_torques:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_torques()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_torques;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(26)) goto parse_analysis;
        break;
      }

      // optional .salamander.msgs.ControlAnalysis analysis = 3;
      case 3: {
        if (tag == 26) {
         parse_analysis:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_analysis()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:salamander.msgs.SalamanderControl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:salamander.msgs.SalamanderControl)
  return false;
#undef DO_
}

void SalamanderControl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:salamander.msgs.SalamanderControl)
  // repeated .salamander.msgs.JointCommands cmds = 1;
  for (unsigned int i = 0, n = this->cmds_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->cmds(i), output);
  }

  // repeated .salamander.msgs.JointTorques torques = 2;
  for (unsigned int i = 0, n = this->torques_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->torques(i), output);
  }

  // optional .salamander.msgs.ControlAnalysis analysis = 3;
  if (has_analysis()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->analysis_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:salamander.msgs.SalamanderControl)
}

::google::protobuf::uint8* SalamanderControl::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:salamander.msgs.SalamanderControl)
  // repeated .salamander.msgs.JointCommands cmds = 1;
  for (unsigned int i = 0, n = this->cmds_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->cmds(i), false, target);
  }

  // repeated .salamander.msgs.JointTorques torques = 2;
  for (unsigned int i = 0, n = this->torques_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->torques(i), false, target);
  }

  // optional .salamander.msgs.ControlAnalysis analysis = 3;
  if (has_analysis()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->analysis_, false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:salamander.msgs.SalamanderControl)
  return target;
}

int SalamanderControl::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:salamander.msgs.SalamanderControl)
  int total_size = 0;

  // optional .salamander.msgs.ControlAnalysis analysis = 3;
  if (has_analysis()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->analysis_);
  }

  // repeated .salamander.msgs.JointCommands cmds = 1;
  total_size += 1 * this->cmds_size();
  for (int i = 0; i < this->cmds_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->cmds(i));
  }

  // repeated .salamander.msgs.JointTorques torques = 2;
  total_size += 1 * this->torques_size();
  for (int i = 0; i < this->torques_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->torques(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SalamanderControl::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:salamander.msgs.SalamanderControl)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const SalamanderControl* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const SalamanderControl>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:salamander.msgs.SalamanderControl)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:salamander.msgs.SalamanderControl)
    MergeFrom(*source);
  }
}

void SalamanderControl::MergeFrom(const SalamanderControl& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:salamander.msgs.SalamanderControl)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  cmds_.MergeFrom(from.cmds_);
  torques_.MergeFrom(from.torques_);
  if (from._has_bits_[2 / 32] & (0xffu << (2 % 32))) {
    if (from.has_analysis()) {
      mutable_analysis()->::salamander::msgs::ControlAnalysis::MergeFrom(from.analysis());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void SalamanderControl::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:salamander.msgs.SalamanderControl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SalamanderControl::CopyFrom(const SalamanderControl& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:salamander.msgs.SalamanderControl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SalamanderControl::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->cmds())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->torques())) return false;
  if (has_analysis()) {
    if (!this->analysis_->IsInitialized()) return false;
  }
  return true;
}

void SalamanderControl::Swap(SalamanderControl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SalamanderControl::InternalSwap(SalamanderControl* other) {
  cmds_.UnsafeArenaSwap(&other->cmds_);
  torques_.UnsafeArenaSwap(&other->torques_);
  std::swap(analysis_, other->analysis_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SalamanderControl::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SalamanderControl_descriptor_;
  metadata.reflection = SalamanderControl_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SalamanderControl

// repeated .salamander.msgs.JointCommands cmds = 1;
int SalamanderControl::cmds_size() const {
  return cmds_.size();
}
void SalamanderControl::clear_cmds() {
  cmds_.Clear();
}
const ::salamander::msgs::JointCommands& SalamanderControl::cmds(int index) const {
  // @@protoc_insertion_point(field_get:salamander.msgs.SalamanderControl.cmds)
  return cmds_.Get(index);
}
::salamander::msgs::JointCommands* SalamanderControl::mutable_cmds(int index) {
  // @@protoc_insertion_point(field_mutable:salamander.msgs.SalamanderControl.cmds)
  return cmds_.Mutable(index);
}
::salamander::msgs::JointCommands* SalamanderControl::add_cmds() {
  // @@protoc_insertion_point(field_add:salamander.msgs.SalamanderControl.cmds)
  return cmds_.Add();
}
::google::protobuf::RepeatedPtrField< ::salamander::msgs::JointCommands >*
SalamanderControl::mutable_cmds() {
  // @@protoc_insertion_point(field_mutable_list:salamander.msgs.SalamanderControl.cmds)
  return &cmds_;
}
const ::google::protobuf::RepeatedPtrField< ::salamander::msgs::JointCommands >&
SalamanderControl::cmds() const {
  // @@protoc_insertion_point(field_list:salamander.msgs.SalamanderControl.cmds)
  return cmds_;
}

// repeated .salamander.msgs.JointTorques torques = 2;
int SalamanderControl::torques_size() const {
  return torques_.size();
}
void SalamanderControl::clear_torques() {
  torques_.Clear();
}
const ::salamander::msgs::JointTorques& SalamanderControl::torques(int index) const {
  // @@protoc_insertion_point(field_get:salamander.msgs.SalamanderControl.torques)
  return torques_.Get(index);
}
::salamander::msgs::JointTorques* SalamanderControl::mutable_torques(int index) {
  // @@protoc_insertion_point(field_mutable:salamander.msgs.SalamanderControl.torques)
  return torques_.Mutable(index);
}
::salamander::msgs::JointTorques* SalamanderControl::add_torques() {
  // @@protoc_insertion_point(field_add:salamander.msgs.SalamanderControl.torques)
  return torques_.Add();
}
::google::protobuf::RepeatedPtrField< ::salamander::msgs::JointTorques >*
SalamanderControl::mutable_torques() {
  // @@protoc_insertion_point(field_mutable_list:salamander.msgs.SalamanderControl.torques)
  return &torques_;
}
const ::google::protobuf::RepeatedPtrField< ::salamander::msgs::JointTorques >&
SalamanderControl::torques() const {
  // @@protoc_insertion_point(field_list:salamander.msgs.SalamanderControl.torques)
  return torques_;
}

// optional .salamander.msgs.ControlAnalysis analysis = 3;
bool SalamanderControl::has_analysis() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void SalamanderControl::set_has_analysis() {
  _has_bits_[0] |= 0x00000004u;
}
void SalamanderControl::clear_has_analysis() {
  _has_bits_[0] &= ~0x00000004u;
}
void SalamanderControl::clear_analysis() {
  if (analysis_ != NULL) analysis_->::salamander::msgs::ControlAnalysis::Clear();
  clear_has_analysis();
}
const ::salamander::msgs::ControlAnalysis& SalamanderControl::analysis() const {
  // @@protoc_insertion_point(field_get:salamander.msgs.SalamanderControl.analysis)
  return analysis_ != NULL ? *analysis_ : *default_instance_->analysis_;
}
::salamander::msgs::ControlAnalysis* SalamanderControl::mutable_analysis() {
  set_has_analysis();
  if (analysis_ == NULL) {
    analysis_ = new ::salamander::msgs::ControlAnalysis;
  }
  // @@protoc_insertion_point(field_mutable:salamander.msgs.SalamanderControl.analysis)
  return analysis_;
}
::salamander::msgs::ControlAnalysis* SalamanderControl::release_analysis() {
  // @@protoc_insertion_point(field_release:salamander.msgs.SalamanderControl.analysis)
  clear_has_analysis();
  ::salamander::msgs::ControlAnalysis* temp = analysis_;
  analysis_ = NULL;
  return temp;
}
void SalamanderControl::set_allocated_analysis(::salamander::msgs::ControlAnalysis* analysis) {
  delete analysis_;
  analysis_ = analysis;
  if (analysis) {
    set_has_analysis();
  } else {
    clear_has_analysis();
  }
  // @@protoc_insertion_point(field_set_allocated:salamander.msgs.SalamanderControl.analysis)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ControlAnalysis::kJointsConsumptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ControlAnalysis::ControlAnalysis()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:salamander.msgs.ControlAnalysis)
}

void ControlAnalysis::InitAsDefaultInstance() {
}

ControlAnalysis::ControlAnalysis(const ControlAnalysis& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:salamander.msgs.ControlAnalysis)
}

void ControlAnalysis::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ControlAnalysis::~ControlAnalysis() {
  // @@protoc_insertion_point(destructor:salamander.msgs.ControlAnalysis)
  SharedDtor();
}

void ControlAnalysis::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ControlAnalysis::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ControlAnalysis::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ControlAnalysis_descriptor_;
}

const ControlAnalysis& ControlAnalysis::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_salamander_5fcontrol_2eproto();
  return *default_instance_;
}

ControlAnalysis* ControlAnalysis::default_instance_ = NULL;

ControlAnalysis* ControlAnalysis::New(::google::protobuf::Arena* arena) const {
  ControlAnalysis* n = new ControlAnalysis;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ControlAnalysis::Clear() {
// @@protoc_insertion_point(message_clear_start:salamander.msgs.ControlAnalysis)
  joints_consumption_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ControlAnalysis::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:salamander.msgs.ControlAnalysis)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .salamander.msgs.JointConsumption joints_consumption = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_joints_consumption:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_joints_consumption()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_joints_consumption;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:salamander.msgs.ControlAnalysis)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:salamander.msgs.ControlAnalysis)
  return false;
#undef DO_
}

void ControlAnalysis::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:salamander.msgs.ControlAnalysis)
  // repeated .salamander.msgs.JointConsumption joints_consumption = 1;
  for (unsigned int i = 0, n = this->joints_consumption_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->joints_consumption(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:salamander.msgs.ControlAnalysis)
}

::google::protobuf::uint8* ControlAnalysis::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:salamander.msgs.ControlAnalysis)
  // repeated .salamander.msgs.JointConsumption joints_consumption = 1;
  for (unsigned int i = 0, n = this->joints_consumption_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->joints_consumption(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:salamander.msgs.ControlAnalysis)
  return target;
}

int ControlAnalysis::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:salamander.msgs.ControlAnalysis)
  int total_size = 0;

  // repeated .salamander.msgs.JointConsumption joints_consumption = 1;
  total_size += 1 * this->joints_consumption_size();
  for (int i = 0; i < this->joints_consumption_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->joints_consumption(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ControlAnalysis::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:salamander.msgs.ControlAnalysis)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const ControlAnalysis* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ControlAnalysis>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:salamander.msgs.ControlAnalysis)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:salamander.msgs.ControlAnalysis)
    MergeFrom(*source);
  }
}

void ControlAnalysis::MergeFrom(const ControlAnalysis& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:salamander.msgs.ControlAnalysis)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  joints_consumption_.MergeFrom(from.joints_consumption_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ControlAnalysis::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:salamander.msgs.ControlAnalysis)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ControlAnalysis::CopyFrom(const ControlAnalysis& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:salamander.msgs.ControlAnalysis)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ControlAnalysis::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->joints_consumption())) return false;
  return true;
}

void ControlAnalysis::Swap(ControlAnalysis* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ControlAnalysis::InternalSwap(ControlAnalysis* other) {
  joints_consumption_.UnsafeArenaSwap(&other->joints_consumption_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ControlAnalysis::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ControlAnalysis_descriptor_;
  metadata.reflection = ControlAnalysis_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ControlAnalysis

// repeated .salamander.msgs.JointConsumption joints_consumption = 1;
int ControlAnalysis::joints_consumption_size() const {
  return joints_consumption_.size();
}
void ControlAnalysis::clear_joints_consumption() {
  joints_consumption_.Clear();
}
const ::salamander::msgs::JointConsumption& ControlAnalysis::joints_consumption(int index) const {
  // @@protoc_insertion_point(field_get:salamander.msgs.ControlAnalysis.joints_consumption)
  return joints_consumption_.Get(index);
}
::salamander::msgs::JointConsumption* ControlAnalysis::mutable_joints_consumption(int index) {
  // @@protoc_insertion_point(field_mutable:salamander.msgs.ControlAnalysis.joints_consumption)
  return joints_consumption_.Mutable(index);
}
::salamander::msgs::JointConsumption* ControlAnalysis::add_joints_consumption() {
  // @@protoc_insertion_point(field_add:salamander.msgs.ControlAnalysis.joints_consumption)
  return joints_consumption_.Add();
}
::google::protobuf::RepeatedPtrField< ::salamander::msgs::JointConsumption >*
ControlAnalysis::mutable_joints_consumption() {
  // @@protoc_insertion_point(field_mutable_list:salamander.msgs.ControlAnalysis.joints_consumption)
  return &joints_consumption_;
}
const ::google::protobuf::RepeatedPtrField< ::salamander::msgs::JointConsumption >&
ControlAnalysis::joints_consumption() const {
  // @@protoc_insertion_point(field_list:salamander.msgs.ControlAnalysis.joints_consumption)
  return joints_consumption_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JointConsumption::kNameFieldNumber;
const int JointConsumption::kConsumptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JointConsumption::JointConsumption()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:salamander.msgs.JointConsumption)
}

void JointConsumption::InitAsDefaultInstance() {
}

JointConsumption::JointConsumption(const JointConsumption& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:salamander.msgs.JointConsumption)
}

void JointConsumption::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  consumption_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

JointConsumption::~JointConsumption() {
  // @@protoc_insertion_point(destructor:salamander.msgs.JointConsumption)
  SharedDtor();
}

void JointConsumption::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void JointConsumption::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JointConsumption::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return JointConsumption_descriptor_;
}

const JointConsumption& JointConsumption::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_salamander_5fcontrol_2eproto();
  return *default_instance_;
}

JointConsumption* JointConsumption::default_instance_ = NULL;

JointConsumption* JointConsumption::New(::google::protobuf::Arena* arena) const {
  JointConsumption* n = new JointConsumption;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void JointConsumption::Clear() {
// @@protoc_insertion_point(message_clear_start:salamander.msgs.JointConsumption)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_name()) {
      name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    consumption_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool JointConsumption::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:salamander.msgs.JointConsumption)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "salamander.msgs.JointConsumption.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(17)) goto parse_consumption;
        break;
      }

      // required double consumption = 2;
      case 2: {
        if (tag == 17) {
         parse_consumption:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &consumption_)));
          set_has_consumption();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:salamander.msgs.JointConsumption)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:salamander.msgs.JointConsumption)
  return false;
#undef DO_
}

void JointConsumption::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:salamander.msgs.JointConsumption)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "salamander.msgs.JointConsumption.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // required double consumption = 2;
  if (has_consumption()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->consumption(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:salamander.msgs.JointConsumption)
}

::google::protobuf::uint8* JointConsumption::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:salamander.msgs.JointConsumption)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "salamander.msgs.JointConsumption.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required double consumption = 2;
  if (has_consumption()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->consumption(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:salamander.msgs.JointConsumption)
  return target;
}

int JointConsumption::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:salamander.msgs.JointConsumption)
  int total_size = 0;

  if (has_name()) {
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  if (has_consumption()) {
    // required double consumption = 2;
    total_size += 1 + 8;
  }

  return total_size;
}
int JointConsumption::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:salamander.msgs.JointConsumption)
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string name = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());

    // required double consumption = 2;
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JointConsumption::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:salamander.msgs.JointConsumption)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const JointConsumption* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const JointConsumption>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:salamander.msgs.JointConsumption)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:salamander.msgs.JointConsumption)
    MergeFrom(*source);
  }
}

void JointConsumption::MergeFrom(const JointConsumption& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:salamander.msgs.JointConsumption)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.has_consumption()) {
      set_consumption(from.consumption());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void JointConsumption::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:salamander.msgs.JointConsumption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JointConsumption::CopyFrom(const JointConsumption& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:salamander.msgs.JointConsumption)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JointConsumption::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void JointConsumption::Swap(JointConsumption* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JointConsumption::InternalSwap(JointConsumption* other) {
  name_.Swap(&other->name_);
  std::swap(consumption_, other->consumption_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata JointConsumption::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = JointConsumption_descriptor_;
  metadata.reflection = JointConsumption_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// JointConsumption

// required string name = 1;
bool JointConsumption::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void JointConsumption::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void JointConsumption::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void JointConsumption::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& JointConsumption::name() const {
  // @@protoc_insertion_point(field_get:salamander.msgs.JointConsumption.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void JointConsumption::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:salamander.msgs.JointConsumption.name)
}
 void JointConsumption::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:salamander.msgs.JointConsumption.name)
}
 void JointConsumption::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:salamander.msgs.JointConsumption.name)
}
 ::std::string* JointConsumption::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:salamander.msgs.JointConsumption.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* JointConsumption::release_name() {
  // @@protoc_insertion_point(field_release:salamander.msgs.JointConsumption.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void JointConsumption::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:salamander.msgs.JointConsumption.name)
}

// required double consumption = 2;
bool JointConsumption::has_consumption() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void JointConsumption::set_has_consumption() {
  _has_bits_[0] |= 0x00000002u;
}
void JointConsumption::clear_has_consumption() {
  _has_bits_[0] &= ~0x00000002u;
}
void JointConsumption::clear_consumption() {
  consumption_ = 0;
  clear_has_consumption();
}
 double JointConsumption::consumption() const {
  // @@protoc_insertion_point(field_get:salamander.msgs.JointConsumption.consumption)
  return consumption_;
}
 void JointConsumption::set_consumption(double value) {
  set_has_consumption();
  consumption_ = value;
  // @@protoc_insertion_point(field_set:salamander.msgs.JointConsumption.consumption)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JointCommands::kNameFieldNumber;
const int JointCommands::kCommandsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JointCommands::JointCommands()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:salamander.msgs.JointCommands)
}

void JointCommands::InitAsDefaultInstance() {
}

JointCommands::JointCommands(const JointCommands& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:salamander.msgs.JointCommands)
}

void JointCommands::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

JointCommands::~JointCommands() {
  // @@protoc_insertion_point(destructor:salamander.msgs.JointCommands)
  SharedDtor();
}

void JointCommands::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void JointCommands::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JointCommands::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return JointCommands_descriptor_;
}

const JointCommands& JointCommands::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_salamander_5fcontrol_2eproto();
  return *default_instance_;
}

JointCommands* JointCommands::default_instance_ = NULL;

JointCommands* JointCommands::New(::google::protobuf::Arena* arena) const {
  JointCommands* n = new JointCommands;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void JointCommands::Clear() {
// @@protoc_insertion_point(message_clear_start:salamander.msgs.JointCommands)
  if (has_name()) {
    name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  commands_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool JointCommands::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:salamander.msgs.JointCommands)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "salamander.msgs.JointCommands.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_commands;
        break;
      }

      // repeated .salamander.msgs.JointState commands = 2;
      case 2: {
        if (tag == 18) {
         parse_commands:
          DO_(input->IncrementRecursionDepth());
         parse_loop_commands:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_commands()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_commands;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:salamander.msgs.JointCommands)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:salamander.msgs.JointCommands)
  return false;
#undef DO_
}

void JointCommands::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:salamander.msgs.JointCommands)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "salamander.msgs.JointCommands.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .salamander.msgs.JointState commands = 2;
  for (unsigned int i = 0, n = this->commands_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->commands(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:salamander.msgs.JointCommands)
}

::google::protobuf::uint8* JointCommands::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:salamander.msgs.JointCommands)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "salamander.msgs.JointCommands.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .salamander.msgs.JointState commands = 2;
  for (unsigned int i = 0, n = this->commands_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->commands(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:salamander.msgs.JointCommands)
  return target;
}

int JointCommands::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:salamander.msgs.JointCommands)
  int total_size = 0;

  // required string name = 1;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }
  // repeated .salamander.msgs.JointState commands = 2;
  total_size += 1 * this->commands_size();
  for (int i = 0; i < this->commands_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->commands(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JointCommands::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:salamander.msgs.JointCommands)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const JointCommands* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const JointCommands>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:salamander.msgs.JointCommands)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:salamander.msgs.JointCommands)
    MergeFrom(*source);
  }
}

void JointCommands::MergeFrom(const JointCommands& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:salamander.msgs.JointCommands)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  commands_.MergeFrom(from.commands_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void JointCommands::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:salamander.msgs.JointCommands)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JointCommands::CopyFrom(const JointCommands& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:salamander.msgs.JointCommands)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JointCommands::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->commands())) return false;
  return true;
}

void JointCommands::Swap(JointCommands* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JointCommands::InternalSwap(JointCommands* other) {
  name_.Swap(&other->name_);
  commands_.UnsafeArenaSwap(&other->commands_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata JointCommands::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = JointCommands_descriptor_;
  metadata.reflection = JointCommands_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// JointCommands

// required string name = 1;
bool JointCommands::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void JointCommands::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void JointCommands::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void JointCommands::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& JointCommands::name() const {
  // @@protoc_insertion_point(field_get:salamander.msgs.JointCommands.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void JointCommands::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:salamander.msgs.JointCommands.name)
}
 void JointCommands::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:salamander.msgs.JointCommands.name)
}
 void JointCommands::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:salamander.msgs.JointCommands.name)
}
 ::std::string* JointCommands::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:salamander.msgs.JointCommands.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* JointCommands::release_name() {
  // @@protoc_insertion_point(field_release:salamander.msgs.JointCommands.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void JointCommands::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:salamander.msgs.JointCommands.name)
}

// repeated .salamander.msgs.JointState commands = 2;
int JointCommands::commands_size() const {
  return commands_.size();
}
void JointCommands::clear_commands() {
  commands_.Clear();
}
const ::salamander::msgs::JointState& JointCommands::commands(int index) const {
  // @@protoc_insertion_point(field_get:salamander.msgs.JointCommands.commands)
  return commands_.Get(index);
}
::salamander::msgs::JointState* JointCommands::mutable_commands(int index) {
  // @@protoc_insertion_point(field_mutable:salamander.msgs.JointCommands.commands)
  return commands_.Mutable(index);
}
::salamander::msgs::JointState* JointCommands::add_commands() {
  // @@protoc_insertion_point(field_add:salamander.msgs.JointCommands.commands)
  return commands_.Add();
}
::google::protobuf::RepeatedPtrField< ::salamander::msgs::JointState >*
JointCommands::mutable_commands() {
  // @@protoc_insertion_point(field_mutable_list:salamander.msgs.JointCommands.commands)
  return &commands_;
}
const ::google::protobuf::RepeatedPtrField< ::salamander::msgs::JointState >&
JointCommands::commands() const {
  // @@protoc_insertion_point(field_list:salamander.msgs.JointCommands.commands)
  return commands_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int JointTorques::kNameFieldNumber;
const int JointTorques::kTorqueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

JointTorques::JointTorques()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:salamander.msgs.JointTorques)
}

void JointTorques::InitAsDefaultInstance() {
}

JointTorques::JointTorques(const JointTorques& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:salamander.msgs.JointTorques)
}

void JointTorques::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

JointTorques::~JointTorques() {
  // @@protoc_insertion_point(destructor:salamander.msgs.JointTorques)
  SharedDtor();
}

void JointTorques::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void JointTorques::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* JointTorques::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return JointTorques_descriptor_;
}

const JointTorques& JointTorques::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_salamander_5fcontrol_2eproto();
  return *default_instance_;
}

JointTorques* JointTorques::default_instance_ = NULL;

JointTorques* JointTorques::New(::google::protobuf::Arena* arena) const {
  JointTorques* n = new JointTorques;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void JointTorques::Clear() {
// @@protoc_insertion_point(message_clear_start:salamander.msgs.JointTorques)
  if (has_name()) {
    name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  torque_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool JointTorques::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:salamander.msgs.JointTorques)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "salamander.msgs.JointTorques.name");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_torque;
        break;
      }

      // repeated .salamander.msgs.JointTorque torque = 2;
      case 2: {
        if (tag == 18) {
         parse_torque:
          DO_(input->IncrementRecursionDepth());
         parse_loop_torque:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_torque()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_torque;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:salamander.msgs.JointTorques)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:salamander.msgs.JointTorques)
  return false;
#undef DO_
}

void JointTorques::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:salamander.msgs.JointTorques)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "salamander.msgs.JointTorques.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // repeated .salamander.msgs.JointTorque torque = 2;
  for (unsigned int i = 0, n = this->torque_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->torque(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:salamander.msgs.JointTorques)
}

::google::protobuf::uint8* JointTorques::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:salamander.msgs.JointTorques)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "salamander.msgs.JointTorques.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // repeated .salamander.msgs.JointTorque torque = 2;
  for (unsigned int i = 0, n = this->torque_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->torque(i), false, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:salamander.msgs.JointTorques)
  return target;
}

int JointTorques::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:salamander.msgs.JointTorques)
  int total_size = 0;

  // required string name = 1;
  if (has_name()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }
  // repeated .salamander.msgs.JointTorque torque = 2;
  total_size += 1 * this->torque_size();
  for (int i = 0; i < this->torque_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->torque(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void JointTorques::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:salamander.msgs.JointTorques)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  const JointTorques* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const JointTorques>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:salamander.msgs.JointTorques)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:salamander.msgs.JointTorques)
    MergeFrom(*source);
  }
}

void JointTorques::MergeFrom(const JointTorques& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:salamander.msgs.JointTorques)
  if (GOOGLE_PREDICT_FALSE(&from == this)) {
    ::google::protobuf::internal::MergeFromFail(__FILE__, __LINE__);
  }
  torque_.MergeFrom(from.torque_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void JointTorques::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:salamander.msgs.JointTorques)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JointTorques::CopyFrom(const JointTorques& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:salamander.msgs.JointTorques)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JointTorques::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->torque())) return false;
  return true;
}

void JointTorques::Swap(JointTorques* other) {
  if (other == this) return;
  InternalSwap(other);
}
void JointTorques::InternalSwap(JointTorques* other) {
  name_.Swap(&other->name_);
  torque_.UnsafeArenaSwap(&other->torque_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata JointTorques::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = JointTorques_descriptor_;
  metadata.reflection = JointTorques_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// JointTorques

// required string name = 1;
bool JointTorques::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void JointTorques::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void JointTorques::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void JointTorques::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
 const ::std::string& JointTorques::name() const {
  // @@protoc_insertion_point(field_get:salamander.msgs.JointTorques.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void JointTorques::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:salamander.msgs.JointTorques.name)
}
 void JointTorques::set_name(const char* value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:salamander.msgs.JointTorques.name)
}
 void JointTorques::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:salamander.msgs.JointTorques.name)
}
 ::std::string* JointTorques::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:salamander.msgs.JointTorques.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* JointTorques::release_name() {
  // @@protoc_insertion_point(field_release:salamander.msgs.JointTorques.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void JointTorques::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:salamander.msgs.JointTorques.name)
}

// repeated .salamander.msgs.JointTorque torque = 2;
int JointTorques::torque_size() const {
  return torque_.size();
}
void JointTorques::clear_torque() {
  torque_.Clear();
}
const ::salamander::msgs::JointTorque& JointTorques::torque(int index) const {
  // @@protoc_insertion_point(field_get:salamander.msgs.JointTorques.torque)
  return torque_.Get(index);
}
::salamander::msgs::JointTorque* JointTorques::mutable_torque(int index) {
  // @@protoc_insertion_point(field_mutable:salamander.msgs.JointTorques.torque)
  return torque_.Mutable(index);
}
::salamander::msgs::JointTorque* JointTorques::add_torque() {
  // @@protoc_insertion_point(field_add:salamander.msgs.JointTorques.torque)
  return torque_.Add();
}
::google::protobuf::RepeatedPtrField< ::salamander::msgs::JointTorque >*
JointTorques::mutable_torque() {
  // @@protoc_insertion_point(field_mutable_list:salamander.msgs.JointTorques.torque)
  return &torque_;
}
const ::google::protobuf::RepeatedPtrField< ::salamander::msgs::JointTorque >&
JointTorques::torque() const {
  // @@protoc_insertion_point(field_list:salamander.msgs.JointTorques.torque)
  return torque_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace msgs
}  // namespace salamander

// @@protoc_insertion_point(global_scope)
